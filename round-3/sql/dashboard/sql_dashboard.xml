<?xml version="1.0" encoding="UTF-8" ?>
<discript>

<query id="getKeywords">
        SELECT
            t_anal_keywords.keyword
        FROM blog_db.t_anal_keywords
          WHERE 1 = 1
            AND sts != 'D'
            AND user_id = #user_id#
</query>

<query id="insertGroupCode">
INSERT INTO t_codeMaster (
        group_cd
       ,group_nm
       ,sts
       )
       VALUES (
          #group_cd#
         ,#group_nm#
         ,'C'
         )
</query>

<query id="insert.image">
INSERT INTO city_db.t_image
(district,
building_nm,
hosu,
category,
path,
file_nm,
reg_dt,
mod_dt,
sts)
VALUES
( #district#,
#building_nm#,
#hosu#,
'건축물대장',
concat(#image_path#, '/' ,#filename#),
#filename#,
now(),
now(),
'C');

</query>

<query id="delete.image">
UPDATE city_db.t_image SET
sts ='D'
WHERE
    district = #district#
    AND building_nm = #building_nm#
    AND hosu = #hosu#
    AND version     = #version#
    AND file_nm =#file_nm#

</query>

<query id="insertDetailGroupCode">
  INSERT INTO t_codeDetailMaster (
      group_cd
     ,code_cd
     ,code_nm
     ,sts
     )
     VALUES (
        #group_cd#
       ,#code_cd#
       ,#code_nm#
       ,'C'
       )
</query>

<query id="getGroupCode">
    SELECT
          group_cd
        , group_nm
        , etc
        FROM t_codeMaster
          WHERE sts = 'C'
</query>
<query id="getGroupDetailCode">
  SELECT
      dt.group_cd
    , dt.code_cd
    , dt.code_nm
    , dt.etc
    FROM t_codeDetailMaster dt
      JOIN t_codeMaster ma
        ON ma.group_cd = dt.group_cd
      WHERE 1 = 1
        AND ma.sts = 'C'
        AND dt.sts = 'C'
          [AND dt.GROUP_CD = #group_cd#]
</query>

<query id="deleteGroupCode">
    UPDATE t_codeMaster
      SET sts = 'D'
     WHERE
        group_cd = #group_cd#
</query>

<query id="deleteDetailCode">
    UPDATE t_codeDetailMaster
      SET sts = 'D'
     WHERE
        code_cd = #code_cd#
</query>
<query id="updateGroupCode">
    UPDATE t_codeMaster
        SET   group_nm = #group_nm#
        WHERE group_cd = #group_cd#
</query>

<query id="updateDetailCode">
  UPDATE t_codeDetailMaster
      SET  code_nm = #code_nm#
      WHERE code_cd = #code_cd#
</query>



<query id="test2">
    select * from ESAUSER2
</query>



<query id="get.email.list">
    select
        'heain' as Name
        ,'11' as Age
        ,email as Address
    from t_email_address
    where 1 = 1

</query>

<query id="get.store.list">
 WITH RAW_TABLE AS (
    SELECT
        district
        , building_nm
        , hosu
        ,[version]
        , ROW_NUMBER() OVER (PARTITION BY district,building_nm,hosu ORDER BY [version] DESC) AS RankNo --각 로우에 일w련번호가 매겨집니다.
    FROM t_store
    WHERE 1 = 1

    [AND building_nm like '%' + #input2#  + '%']
    [AND district = #select3#]
)
SELECT
    A.district
    ,'click' AS item_desc
    ,A.building_nm
    ,A.hosu
    ,A.category
    ,A.rec_dt           -- 접수날짜
    ,D.code_nm  AS category_nm
    ,A.maintance_cost
    ,A.rent_py_rating                       -- 데이터없음.
    ,round(A.real_py_size,2) as real_py_size  -- 전용평
    ,round(A.bun_py_size,2) as bun_py_size    -- 분양평
    ,round(A.real_py_raing,0) AS  real_py_raing       -- 전용율
    ,A.real_m2_size         -- 전용M2
    ,A.bun_m2_size          -- 붐양M2
    ,A.public1
    ,A.public2
    ,A.public3
    ,A.public4
    ,A.public5
    ,A.public6
    ,A.public7
    ,A.public_sum           -- 공용합
    ,A.floar
    ,A.facing
    ,A.version
    ,A.monthly_py -- 임대평단가
    ,C.junse_py_rate -- 전세평단가
    ,B.lessor1
    ,B.lessor2
    ,B.lessor1_phone
    ,B.lessor2_phone
    ,B.sale_price
    ,round(B.sale_py_rating,0)    AS sale_py_rating -- 매매평단가
    ,B.lessor_add               AS address
    ,B.lessor_add2              AS lessor_add2
    ,C.lessee_add               AS lessee_add
    ,C.lessee_add2              AS lessee_add2
    ,B.etc
    ,C.brand_nm -- 상호명
    ,C.sector1  -- 구분 1
    ,C.sector2  -- 구분 2
    ,C.move_in_dt -- 입주일
    ,round(C.deposit,0)           AS deposit -- 보증금
    ,round(C.monthly,0)           AS monthly -- 월세
    ,round(C.right_money,0)       AS right_money -- 권리금
    ,isnull(C.monthly,0) + isnull(A.maintance_cost,0) AS  total_cost -- 총비용
    ,A.view_yn AS view_yn -- 표시여부
FROM RAW_TABLE AS RAW
JOIN t_store AS A
    ON  RAW.district    = A.district
    AND RAW.building_nm = A.building_nm
    AND RAW.hosu        = A.hosu
    AND RAW.version     = A.version
LEFT OUTER JOIN t_lessor AS B
    ON  A.district    = B.district
    AND A.building_nm = B.building_nm
    AND A.hosu        = B.hosu
    AND A.version     = B.version
LEFT OUTER JOIN t_lessee AS C
    ON  A.district    = C.district
    AND A.building_nm = C.building_nm
    AND A.hosu        = C.hosu
    AND A.version     = C.version
LEFT OUTER JOIN t_codeDetailMaster AS D
	ON A.category = D.code_cd
	AND D.group_cd = 'M02'
WHERE 1 = 1
    AND A.sts != 'D'
    AND [ 1 = CASE   WHEN #check2#  = 'checked' AND  RAW.RankNo = '1'   THEN 1
                    WHEN #check2#  = 'notChecked'  THEN 1 END ]
    [AND C.brand_nm like '%' + #input1#  + '%']
    [AND B.lessor1 like '%' + #input3#  + '%'] -- 소유자
    [AND B.lessor_add like '%' + #input4#  + '%'] -- 소유자 주소
    [AND A.category = replace(#select2#,' ','')]
    [AND 1 = CASE   WHEN #check1#  = 'checked'    THEN 1
                    WHEN #check1#  = 'notChecked' AND (A.view_yn = 'True' OR A.view_yn = 'true') THEN 1 END
    ]
    [AND 1 = CASE   WHEN #select6# = 'P00' AND A.real_py_size &lt; 10 THEN 1
                    WHEN #select6# = 'P10' AND A.real_py_size &gt;= 10 AND A.real_py_size &lt; 20 THEN 1
                    WHEN #select6# = 'P20' AND A.real_py_size &gt;= 20 AND A.real_py_size &lt; 30 THEN 1
                    WHEN #select6# = 'P30' AND A.real_py_size &gt;= 30 AND A.real_py_size &lt; 40 THEN 1
                    WHEN #select6# = 'P40' AND A.real_py_size &gt;= 40 AND A.real_py_size &lt; 50 THEN 1
                    WHEN #select6# = 'P50' AND A.real_py_size &gt;= 50 THEN 1
    ELSE 0 END ]

    /*보증금*/
    [AND 1 = CASE   WHEN #select7# ='0' AND C.deposit  &lt;  5000 THEN 1
                    WHEN #select7# ='5' AND 5000 &lt;= C.deposit AND C.deposit &lt; 6000    THEN 1
                    WHEN #select7# ='6' AND 6000 &lt;= C.deposit AND C.deposit &lt; 7000    THEN 1
                    WHEN #select7# ='7' AND 7000 &lt;= C.deposit AND C.deposit &lt; 8000    THEN 1
                    WHEN #select7# ='8' AND 8000 &lt;= C.deposit AND C.deposit &lt; 9000    THEN 1
                    WHEN #select7# ='9' AND 9000 &lt;= C.deposit AND C.deposit &lt; 10000    THEN 1
                    WHEN #select7# ='10' AND 10000 &lt;= C.deposit     THEN 1
    ELSE 0 END]

     /*월세*/
    [AND 1 = CASE   WHEN #select8# ='0' AND C.monthly  &lt;  100 THEN 1
                    WHEN #select8# ='1' AND C.monthly  &gt;= 100 THEN 1    ELSE 0 END]

    /*매매평단가  */
    [AND 1 = CASE   WHEN #select9# ='0' AND B.sale_py_rating  &lt;  1000 THEN 1
                    WHEN #select9# ='1' AND B.sale_py_rating  &gt;= 1000 THEN 1     ELSE 0 END]

    order by A.district, A.building_nm, A.floar ,A.hosu


</query>

<query id="get.store.detail">
SELECT TOP 1
A.district
,A.building_nm
,A.hosu
,A.version
,A.category
,A.recomend1  -- 추천업종1
,A.recomend2  -- 추천업종2
,A.recomend3  -- 추천업종3
,A.park  -- 주차
,D.code_nm  AS category_nm
,A.maintance_cost
,A.rent_py_rating                       -- 데이터없음.
,round(A.real_py_size,2) as real_py_size  -- 전용평
,round(A.bun_py_size,2) as bun_py_size    -- 분양평
,round(A.real_py_raing,2) AS  real_py_raing       -- 전용율
,A.real_m2_size         -- 전용M2
,A.bun_m2_size          -- 붐양M2
,A.public1
,A.public2
,A.public3
,A.public4
,A.public5
,A.public6
,A.public7
,A.public_sum           -- 공용합
,A.floar
,A.facing
,B.lessor1
,B.lessor2
,B.lessor1_phone
,B.lessor2_phone
,B.sale_price
,round(B.sale_py_rating,2)    AS sale_py_rating
,B.lessor_add               AS address
,B.lessor_add2              AS lessor_add2
,B.etc AS lessor_etc

,C.sector1  -- 구분 1
,C.sector2  -- 구분 2
,round(C.monthly,0)  AS monthly -- 월세
,round(C.right_money,0) AS right_money -- 권리금
,C.lessee1
,C.lessee2
,C.lessee1_phone
,C.lessee2_phone
,C.lessee_add
,C.lessee_add2
,round(C.deposit,0)  AS deposit -- 보증금
,C.brand_nm
,C.move_in_dt
,C.h1
,C.h2
,C.monthly
,C.right_money
,C.etc   AS lessee_etc
,A.maintance_py_cost
,A.mamul_character
,A.sale_dt
,A.move_possible_dt
,A.total_cost
,A.monthly_py
,C.junse_py_rate
,A.profit_rate
,A.reg_change_dt
,A.view_yn AS view_yn -- 표시여부
FROM t_store AS A
LEFT OUTER JOIN t_lessor AS B
    ON  A.district    = B.district
    AND A.building_nm = B.building_nm
    AND A.hosu        = B.hosu
    AND A.version     = B.version
LEFT OUTER JOIN t_lessee AS C
    ON  A.district    = C.district
    AND A.building_nm = C.building_nm
    AND A.hosu        = C.hosu
    AND A.version     = C.version
LEFT OUTER JOIN t_codeDetailMaster AS D
	ON A.category = D.code_cd
	AND D.group_cd = 'M02'
WHERE 1 = 1
    [AND A.district    = #district#]
    [AND A.building_nm = #building_nm#]
    [AND A.hosu        = replace(#hosu#,' ','+')]
    [AND A.version        = #version#]



</query>

<query id="get.store.image">
    SELECT district,
    building_nm,
    hosu,
    category,
    path,
    file_nm,
    reg_id,
    sts
FROM t_image
WHERE 1 = 1
    [AND building_nm = #building_nm#]
    [AND hosu        = replace(#hosu#,' ','+')]
    AND version     = #version#
    AND category = '건축물대장'
    AND sts != 'D'
union all
    SELECT district,
    building_nm,
    hosu,
    category,
    path,
    file_nm,
    reg_id,
    sts
FROM t_image
WHERE 1 = 1
    [AND building_nm = #building_nm#]
    AND version     = #version#
    AND category != '건축물대장'
    AND sts != 'D'

</query>

<query id="update.lessor.detail">
    UPDATE
    t_lessor
    SET
    hosu = hosu
    ,sts = 'C'
    [,lessor1 = #lessor1#]
    [,lessor2 = #lessor2#]
    [,lessor1_phone =#lessor1_phone#]
    [,lessor2_phone =#lessor2_phone#]
    [,sale_price = #sale_price#]
    [,sale_py_rating = #sale_py_rating#]
    [,lessor_add = #lessor_add#]
    [,lessor_add2 = #lessor_add2#]
    [,etc = #lessor_etc#]
    WHERE 1 = 1
    [AND district    = #district#]
    [AND building_nm = #building_nm#]
    [AND hosu        = replace(#hosu#,' ','+')]
    [AND version     = #version#]
</query>
<query id="insert.store.detail">
  INSERT INTO
      t_store (
         district,
         building_nm,
         hosu,
         version

      )
   VALUES (
      #district#,
      #building_nm#,
      replace(#hosu#,' ','+'),
      #version#
   )

     INSERT INTO
      t_lessee (
         district,
         building_nm,
         hosu,
         version
      )
   VALUES (
      #district#,
      #building_nm#,
      replace(#hosu#,' ','+'),
      #version#
   )
     INSERT INTO
      t_lessor (
         district,
         building_nm,
         hosu,
         version
      )
   VALUES (
      #district#,
      #building_nm#,
      replace(#hosu#,' ','+'),
      #version#
   )

</query>

<query id="delete.store.detail">
  UPDATE
      t_store
    SET
     sts = 'D'
    WHERE
        district = #district#
    AND building_nm = #building_nm#
    AND hosu = #hosu#
    AND version = #version#

    UPDATE
      t_lessee
    SET
     sts = 'D'
    WHERE
        district = #district#
    AND building_nm = #building_nm#
    AND hosu = #hosu#
    AND version = #version#

    UPDATE
      t_lessor
    SET
     sts = 'D'
    WHERE
        district = #district#
    AND building_nm = #building_nm#
    AND hosu = #hosu#
    AND version = #version#

      UPDATE
      t_image
    SET
     sts = 'D'
    WHERE
        district = #district#
    AND building_nm = #building_nm#
    AND hosu = #hosu#
    AND version = #version#




</query>


<query id="update.store.detail">
    UPDATE
    t_store
    SET
    hosu = hosu
    ,sts = 'C'
    [,maintance_cost = #maintance_cost#]
    [,recomend1 = #recomend1#]
    [,recomend2 = #recomend2#]
    [,recomend3 = #recomend3#]
    [,park = #park#]
    [,rent_py_rating = #rent_py_rating#]
    [,real_py_size = round(#real_py_size#,2)]
    [,bun_py_size = #bun_py_size#]
    [,real_py_raing = #real_py_raing#]
    [,real_m2_size = #real_m2_size#]
    [,bun_m2_size = #bun_m2_size#]
    [,category = #category#]
    [,rec_dt = CASE WHEN #category# = '0'  THEN NULL
                    ELSE #today# END]
    [,address = #address#]
    [,public1 = #public1#]
    [,public2 = #public2#]
    [,public3 = #public3#]
    [,public4 = #public4#]
    [,public5 = #public5#]
    [,public6 = #public6#]
    [,public7 = #public7#]
    [,public_sum = #public_sum#]
    [,floar = #floar#]
    [,facing = #facing#]
	[,maintance_py_cost = #maintance_py_cost# ]
    [,mamul_character = #mamul_character# ]
    [,sale_dt = #sale_dt# ]
    [,move_possible_dt = #move_possible_dt#]
    [,total_cost = #total_cost#]
    [,monthly_py = #monthly_py#]
    [,profit_rate = #profit_rate#]
    [,reg_change_dt = #reg_change_dt#]
    [,view_yn = #view_yn#]





    WHERE 1 = 1
    [AND district    = #district#]
    [AND building_nm = #building_nm#]
    [AND hosu        = replace(#hosu#,' ','+')]
    [AND version = #version#]
</query>
<query id="update.lessee.detail">
    UPDATE
    t_lessee
    SET
    hosu = hosu
    ,sts = 'C'
    [,lessee1       = #lessee1#]
    [,lessee2       = #lessee2#]
    [,lessee1_phone = #lessee1_phone#]
    [,lessee2_phone = #lessee2_phone#]
    [,lessee_add    = #lessee_add#]
    [,lessee_add2   = #lessee_add2#]
    [,deposit       = #deposit#]
    [,brand_nm      = #brand_nm#]
    [,move_in_dt    = #move_in_dt#]
    [,h1            = #h1#]
    [,h2            = #h2#]
    [,sector1       = #sector1#]
    [,sector2       = #sector2#]
    [,monthly       = #monthly#]
    [,right_money   = #right_money#]
    [,etc           = #lessee_etc#]
    [,junse_py_rate = #junse_py_rate#]
    WHERE 1 = 1
    [AND district    = #district#]
    [AND building_nm = #building_nm#]
    [AND hosu        = replace(#hosu#,' ','+')]
    [AND version = #version#]
</query>


<query id="delete.t_analysis_datas.list">
    delete
    from t_analysis_datas
    where 1 = 1
        AND date(interface_date) = #target_date#

</query>

</discript>



